pipeline {
    agent {
        docker {
            image 'maven:3.6.1-jdk-8-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages {
        stage("build"){
            when {
                changeset "**/worker/**"
            }
            steps{
                echo 'Compiling worker app'
                dir('worker') {
                    sh 'mvn compile'
                }
            }
        }
        stage("test"){
            when {
                changeset "**/worker/**"
            }
            steps{
                echo 'Running unit Tests on worker app'
                dir('worker') {
                    sh 'mvn clean test'
                }
            }
        }
        stage("package"){
            when {
                branch 'master'
                changeset "**/worker/**"
            }
            steps{
                echo 'Packaging worker app'
                dir('worker') {
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage("docker-package"){
            when{
                branch 'master'
                changeset '**/worker/**'
            }
            steps{
                echo 'Packaging worker with docker'
                script {
                    def workerImage = docker.build("local/worker:v${env.BUILD_ID}", "./worker/")
                }
            }
        }
    }

    post{
        always{
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
            echo 'Building multibranch pipeline for worker is completed...'
        }
    }
}